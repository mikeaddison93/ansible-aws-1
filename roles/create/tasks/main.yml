---
# Launch instances

- name: notify role start
  local_action: mqtt
     server={{ mqtt_server }}
     qos=0
     retain=false
     username={{ mqtt_user }}
     password={{ mqtt_pwd }}
     topic="{{ mqtt_root }}/{{ local_hostname }}"
     payload="ansible-aws at {{ timestamp }} create role start for {{ inventory_hostname }}"
  when: mqtt_server is defined

- name: Launch instance
  ec2:
      key_name: "{{ item.keypair }}"
      group_id: "{{ item.security_group }}"
      instance_type: "{{ item.instance_type }}"
      spot_price: "{{ item.spot_price }}"
      spot_wait_timeout: "{{ item.spot_wait_timeout }}"
      image: "{{ item.image }}"
      wait: true
      region: "{{ item.region }}"
      vpc_subnet_id: "{{ item.subnet }}"
      count: "{{ item.count }}"
      assign_public_ip: yes
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
  with_items: ec2create.instances
  register: ec2
  
- name: Display results
  debug: msg="Registered {{ ec2 }}"

- name: Add new instance to host group
  add_host:
      hostname={{ item.1.public_ip }}
      groups=launched
      ec2_id={{ item.1.id }}
      ec2_region={{ item.1.region }}
      ansible_ssh_user=ubuntu
  with_subelements:
    - ec2.results
    - instances

- name: Save instance info to a local file
  local_action: template src="ec2.j2" dest="/tmp/instances.yaml"

- name: Wait for SSH to come up
  wait_for: host={{ item.1.public_dns_name }} port=22 delay=60 timeout=320 state=started
  with_subelements:
    - ec2.results
    - instances
  
- name: notify role end
  local_action: mqtt
     server={{ mqtt_server }}
     qos=0
     retain=false
     username={{ mqtt_user }}
     password={{ mqtt_pwd }}
     topic="{{ mqtt_root }}/{{ local_hostname }}"
     payload="ansible-aws at {{ timestamp }} create role end for {{ inventory_hostname }}"
  when: mqtt_server is defined

- name: Send e-mail to admins
  local_action: mail
      from={{ mail_from }}
      to={{ mail_to }}
      host={{ mail_host }}
      subject="EC2 instance {{ item.1.id }} created"
      body="EC2 instance {{ item.1.id }} created on {{ item.1.public_ip }}"
  when: mail_to is defined
  with_subelements:
    - ec2.results
    - instances
